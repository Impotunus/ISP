@model ISP.ViewModels.AccountViewModels.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<div class="page-header">
    <h3>Register new user</h3>
</div>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal" }))
{
    <div class="form-group">
        @Html.LabelFor(t => t.UserName, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(t => t.UserName, new { @class = "form-control pull-left", type = "text" })
            @Html.ValidationMessageFor(t => t.UserName, null, new { @class = "pull-left register-validation-error"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(t => t.Email, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(t => t.Email, new { @class = "form-control pull-left", type = "email" })
            @Html.ValidationMessageFor(t => t.Email, null, new { @class = "pull-left register-validation-error" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(t => t.Password, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(t => t.Password, new { @class = "form-control pull-left", type = "password" })
            @Html.ValidationMessageFor(t => t.Password, null, new { @class = "pull-left register-validation-error" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(t => t.Password, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(t => t.ConfirmPassword, new { @class = "form-control pull-left", type = "password" })
            @Html.ValidationMessageFor(t => t.ConfirmPassword, null, new { @class = "pull-left register-validation-error" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(t => t.Address, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(t => t.Address, new { @class = "form-control pull-left", type = "text" })
            @Html.ValidationMessageFor(t => t.Address, null, new { @class = "pull-left register-validation-error" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(t => t.FirstName, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(t => t.FirstName, new { @class = "form-control pull-left", type = "text" })
            @Html.ValidationMessageFor(t => t.FirstName, null, new { @class = "pull-left register-validation-error" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(t => t.LastName, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(t => t.LastName, new { @class = "form-control pull-left", type = "text" })
            @Html.ValidationMessageFor(t => t.LastName, null, new { @class = "pull-left register-validation-error" })
        </div>
    </div>

    @Html.AntiForgeryToken()

    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <button type="submit" class="btn btn-default">Register</button>
        </div>
    </div>
}

